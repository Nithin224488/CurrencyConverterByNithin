{"version":3,"sources":["components/CurrencyInput/styledComponents.js","components/CurrencyInput/index.js","components/Header/styledComponents.js","components/Header/index.js","components/CurrencyCoverter/styledComponents.js","components/CurrencyCoverter/index.js","components/ProtectedRoute/index.js","components/LoginForm/styledComponents.js","components/LoginForm/index.js","components/RegisterForm/styledComponents.js","components/RegisterForm/index.js","components/ForgetPassword/styledComponents.js","components/ForgetPassword/index.js","App.js","reportWebVitals.js","index.js"],"names":["Option","styled","option","CurrencyInput","props","currency","value","HeaderContainer","div","Logo","h1","LogOut","button","withRouter","type","onClick","history","localStorage","removeItem","replace","AppContainer","Heading","ConverterContainer","Card","Select","select","CurrencyHeading","SelectContainer","Input","input","Result","LoaderContainer","FailureContainer","FailureImage","img","FailureHeading","FailureDescription","p","apiStatusConstants","CurrenctConverter","state","currencyOptions","fromAmount","toAmount1","toAmount2","fromCurrency","toCurrency1","toCurrency2","currencyNames","apiStatus","getCurrencyData","a","setState","fetch","response","json","data","ok","Object","keys","setFromCurrency","event","target","getCurrencyConversion","setToCurrency1","console","log","setToCurrency2","setFromAmount","parseInt","alert","respone","values","rates","renderCurrencyConverterSuccessView","onChange","map","autoComplete","disabled","renderFailureView","src","renderLoadingView","color","height","width","renderCurrencyConverter","this","Component","ProtectedRoute","currentUser","JSON","parse","getItem","to","MainContainer","Form","form","InputContainer","Label","label","LoginButton","ForgotPasswordContainer","StyledLink","Link","ForgetPassword","SignUpContainer","SignUpQuestion","SignUp","span","ErrorMsg","LoginForm","userName","password","isLoginError","usernameRequired","passwordRequired","onChangeUserName","onChangePassword","onBlurUserName","onBlurPassword","submitForm","preventDefault","userDetails","userData","some","setItem","stringify","loginError","userNameInputContianer","htmlFor","id","placeholder","onBlur","passwordInputContianer","responseGoogle","profileObj","givenName","googleId","onSubmit","clientId","onSuccess","onFailure","cookiePolicy","SignUpButton","LogInContainer","LogInQuestion","LogIn","RegisterForm","emailId","fullName","isUserNameAlreadyUsed","isMailIdAlreadyUsed","passwordError","confirmPassword","emailRequired","fullNameRequired","UsernameRequired","confirmPasswordRequired","onChangeMailId","onChangeFullName","onChangeConfirmPassword","onBlurEmail","onBlurFullname","onBlurConfirmPassword","isEmpty","mailIdInputContainer","fullNameInputContainer","confirmPasswordInputContianer","ResetPassword","userNameError","isUsernamePresent","currentUserDetails","filter","otherUsersDetails","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cd1a772.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Option=styled.option`\n   cursor:pointer;\n`","import {Option} from './styledComponents'\n\n\nconst CurrencyInput = props => {\n    const { currency } = props\n\n    return (\n        <Option value={currency} >{currency}</Option>)\n\n}\nexport default CurrencyInput","import styled from \"styled-components\";\n\nexport const HeaderContainer=styled.div`\ndisplay:flex;\njustify-content:space-around;\npadding:20px;\nbackground:#000;\n\n`\nexport const Logo=styled.h1`\ncolor:#3964F5;\nfont-size:32px;\n@media screen and (max-width:576px){\n    font-size:28px;}\n`\nexport const LogOut=styled.button`\n    border:none;\n    border-radius:8px;\n    padding:0px 32px 0px 32px;\n    height:50px;\n    align-self:center;\n    outline:none;\n    background-color:#3964F5;\n    color:#fff;\n    font-size:18px;\n    cursor:pointer;\n    @media screen and (max-width:576px){\n        padding:6px 8px 6px 8px;\n        font-size:14px;\n    }\n`","import {HeaderContainer,Logo,LogOut} from './styledComponents'\nimport { withRouter } from 'react-router'\nconst Header=props=>{\n\n    const onClickLogOut=()=>{\n        const {history}=props\n        localStorage.removeItem(\"currentUser\")\n        history.replace('/login')\n\n    }\n\n    return(\n        <HeaderContainer>\n            <Logo>Currency Converter</Logo>\n            <LogOut type=\"button\" onClick={onClickLogOut}>Log out</LogOut>\n        </HeaderContainer>\n    )\n}\nexport default withRouter(Header)","import styled from 'styled-components'\n\nexport const AppContainer=styled.div`\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    min-height:90vh;\n    background:#0F0F0F;\n    \n   \n    \n`\nexport const Heading=styled.h1`\n   font-size:30px;\n   color:#fff;\n   @media screen and (max-width:576px){\n    font-size:26px;\n}\n\n`\nexport const ConverterContainer=styled.div`\n    display:flex;\n    justify-content:space-around;\n    max-width:1440px;\n    width:80%;\n    margin-bottom:15px;\n    @media screen and (max-width:1076px){\n        flex-direction:column;\n        align-items:center;\n    }\n`\nexport const Card=styled.div`\ndisplay:flex;\nflex-direction:column;\nmin-width:200px;\ncolor:#fff;\n    margin-bottom:15px;\n    font-size:14px;\n    margin-right:15px;\n    @media screen and (max-width:1076px){\n        width:80%;\n    }\n    @media screen and (max-width:576px){\n        width:90%;\n    }\n    \n`\nexport const Select=styled.select`\n    outline:none;\n    border:none;\n    border-radius:4px;\n    height:40px;\n    @media screen and (max-width:576px){\n        height:20px;\n    }\n`\nexport const CurrencyHeading=styled.h1`\n    color:#3964F5;\n    font-size:22px;\n`\nexport const SelectContainer=styled.div`\nmargin-right:20px;\n`\n\n\nexport const Input=styled.input`\noutline:none;\nborder:none;\nborder-radius:4px;\nheight:40px;\npadding-left:15px;\n    font-size:14px;\n    color:#000;\n    @media screen and (max-width:576px){\n        height:20px;\n    }\n\n`\n\nexport const Result=styled.h1`\nfont-size:28px;\n@media screen and (max-width:576px){\n    font-size:20px;\n}\n\n`\nexport const LoaderContainer=styled.div`\nheight:100vh;\ndisplay:flex;\nflex-direction:column;\njustify-content:center;\nalign-items:center;\nbackground:#0F0F0F;\n\n`\nexport const FailureContainer=styled.div`\nmargin-top: 0px;\nmargin-left: 30px;\nwidth: 70%;\npadding-bottom: 0;\n\n`\nexport const FailureImage=styled.img`\nwidth: 250px;\nheight: 200px;\n@media screen and (min-width: 768px) {\n  width: 400px;\n  height: 350px;\n}\n\n`\nexport const FailureHeading=styled.h1`\ncolor: #171f46;\nfont-family: 'Roboto';\nfont-size: 20px;\nfont-weight: 500;\nline-height: 1.3;\n\n@media screen and (min-width: 768px) {\n  font-size: 24px;\n}\n\n`\nexport const FailureDescription=styled.p`\n    text-align: center;\n    color: #64748b;\n    font-family: 'Roboto';\n    font-size: 14px;\n    width: 90%;\n    max-width: 288px;\n    line-height: 1.3;\n  @media screen and (min-width: 768px) {\n      font-size: 18px;\n      width: 60%;\n      max-width: 466px;\n  }\n\n`\n ","\nimport { Component } from 'react'\nimport Loader from 'react-loader-spinner'\nimport CurrencyInput from '../CurrencyInput'\n\nimport Header from'../Header'\n\n\nimport {\n  AppContainer, Heading,\n  ConverterContainer,\n  Card, Select, CurrencyHeading, SelectContainer,\n  Input,Result,LoaderContainer,FailureContainer,\n  FailureImage,FailureHeading,FailureDescription\n} from './styledComponents'\n\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass CurrenctConverter extends Component {\n  state = { currencyOptions: [], fromAmount: 0, toAmount1: 0,toAmount2:0, fromCurrency: '', toCurrency1: '', toCurrency2: '',currencyNames: {} ,apiStatus: apiStatusConstants.initial,}\n\n  componentDidMount() {\n    this.getCurrencyData()\n  }\n\n  getCurrencyData = async () => {\n    this.setState({\n      apiStatus: apiStatusConstants.inProgress,\n    })\n    const response = await fetch('https://api.frankfurter.app/currencies')\n    const data = await response.json()\n  \n    if (response.ok){\n     \n      this.setState({ currencyOptions: Object.keys(data), fromCurrency: Object.keys(data)[0], \n        toCurrency1: Object.keys(data)[0], toCurrency2: Object.keys(data)[0], currencyNames: data, apiStatus: apiStatusConstants.success, })\n    }else{\n      this.setState({\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n    \n  }\n\n  setFromCurrency = event => {\n    this.setState({ fromCurrency: event.target.value }, this.getCurrencyConversion)\n  }\n\n  setToCurrency1 = event => {\n    console.log(event.target.value)\n    this.setState({ toCurrency1: event.target.value }, this.getCurrencyConversion)\n  }\n\n  setToCurrency2 = event => {\n    console.log(event.target.value)\n    this.setState({ toCurrency2: event.target.value }, this.getCurrencyConversion)\n  }\n\n  setFromAmount = event => {\n    this.setState({ fromAmount: event.target.value }, this.getCurrencyConversion)\n  }\n\n  getCurrencyConversion = async () => {\n    const { fromCurrency, fromAmount, toCurrency1, toCurrency2} = this.state\n    if (parseInt(fromAmount) === 0) {\n      this.setState({ toAmount1: 0 ,toAmount2: 0 })\n    } else if (fromAmount === '') {\n      this.setState({ toAmount1: 0 ,toAmount2: 0 })\n    } else if (fromCurrency === toCurrency1 && fromCurrency===toCurrency2) {\n      alert(\"All currencies selected are same. Change any one currencies to get result.\")\n      this.setState({fromAmount:0, toAmount1: 0 ,toAmount2: 0 })\n    } else {\n      const respone = await fetch(`https://api.frankfurter.app/latest?amount=${fromAmount}&from=${fromCurrency}&to=${toCurrency1},${toCurrency2}`)\n      const data = await respone.json()\n      this.setState({ toAmount1: Object.values(data.rates)[0] ,toAmount2:Object.values(data.rates)[1]})\n      console.log(Object.values(data.rates)[0])\n    }\n\n  }\n\n  renderCurrencyConverterSuccessView=()=>{\n\n    const { currencyOptions, fromAmount, toAmount1,toAmount2 ,fromCurrency, toCurrency1,toCurrency2, currencyNames } = this.state\n\n    return (\n      <>\n       <Header/>\n      <AppContainer >\n       \n        <Heading>Currency Converter</Heading>\n        <ConverterContainer >\n          <Card >\n            <SelectContainer >\n              <CurrencyHeading>From Currency : </CurrencyHeading>\n              <Select onChange={this.setFromCurrency}>\n                {\n                  currencyOptions.map(currency => (<CurrencyInput key={currency} currency={currency} />))\n                }\n              </Select>\n\n            </SelectContainer>\n            <h2>Enter Amount in {currencyNames[`${fromCurrency}`]} : </h2>\n            <Input type=\"number\" autoComplete=\"off\" value={fromAmount} onChange={this.setFromAmount} />\n            <Result>{fromAmount} {fromCurrency} </Result>\n          \n          </Card>\n          <Card>\n          <SelectContainer>\n              <CurrencyHeading>To Currency 1: </CurrencyHeading>\n              <Select onChange={this.setToCurrency1}>\n                {\n                  currencyOptions.map(currency => (<CurrencyInput key={currency} currency={currency} />))\n                }\n              </Select>\n\n            </SelectContainer>\n           \n            <h2>Output 1 in {currencyNames[`${toCurrency1}`]} : </h2>\n            <Input  disabled value={toAmount1} type=\"text\" />\n            <Result> {toAmount1} {toCurrency1}</Result>\n            \n          </Card>\n          <Card>\n\n          <SelectContainer>\n              <CurrencyHeading>To Currency 2: </CurrencyHeading>\n              <Select onChange={this.setToCurrency2}>\n                {\n                  currencyOptions.map(currency => (<CurrencyInput key={currency} currency={currency} />))\n                }\n              </Select>\n\n            </SelectContainer>\n          <h2>Output 2 in {currencyNames[`${toCurrency2}`]} : </h2>\n            \n           \n            \n            <Input  disabled value={toAmount2} type=\"text\" />\n            <Result> {toAmount2} {toCurrency2}</Result>\n          </Card>\n        \n        </ConverterContainer>\n      </AppContainer>\n      </>\n    )\n\n  }\n\n\n  renderFailureView = () => (\n    <FailureContainer>\n      <FailureImage\n        src=\"https://assets.ccbp.in/frontend/react-js/nxt-trendz/nxt-trendz-products-error-view.png\"\n       \n      />\n      <FailureHeading>\n        Oops! Something Went Wrong\n      </FailureHeading>\n      <FailureDescription>\n        We are having some trouble processing your request. Please try again.\n      </FailureDescription>\n    </FailureContainer>\n  )\n\n\n  renderLoadingView = () => (\n    <LoaderContainer>\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n    </LoaderContainer>\n  )\n\n\n  renderCurrencyConverter = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderCurrencyConverterSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoadingView()\n      default:\n        return null\n    }\n  }\n\n\n  render() {\n\n    return(\n      this.renderCurrencyConverter()\n    )\n    \n  }\n\n}\nexport default CurrenctConverter","import { Route ,Redirect} from \"react-router\"\n\nconst ProtectedRoute=props=>{\n    const currentUser=JSON.parse(localStorage.getItem('currentUser'))\n    console.log(currentUser)\n    \n    if (currentUser!==null){\n        return <Route {...props}/>\n    }\n        return <Redirect to=\"/login\" />\n    \n\n}\nexport default ProtectedRoute","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const MainContainer=styled.div`\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    height:100vh;\n    background:#0F0F0F;\n   \n    \n`\nexport const Heading=styled.h1`\n    font-size:32px;\n    color:#3964F5;\n    @media screen and (max-width:567px){\n        font-size:28px;\n    }\n\n`\nexport const Form=styled.form`\n    border:solid 3px grey;\n    display:flex;\n    flex-direction:column;\n    justify-content:space-around;\n    align-items:center;\n    padding:30px;\n    height:350px;\n    width:350px;\n    margin-bottom:30px;\n    @media screen and (max-width:567px){\n        width:80%;\n    }\n\n`\nexport const InputContainer=styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n`\nexport const Label=styled.label`\n    color:#fff;\n    margin-bottom:15px;\n    font-size:14px;\n    \n`\nexport const Input=styled.input`\n    outline:none;\n    border:none;\n    border-radius:4px;\n    height:40px;\n    padding-left:15px;\n    font-size:14px;\n`\nexport const LoginButton=styled.button`\nborder-radius:8px;\noutline:none;\n    border:none;\n    width:100%;\n    padding:16px;\n    background:#3964F5;\n    color:#fff;\n    font-size:18px;\n    font-weight:600;\n    cursor:pointer;\n`\nexport const ForgotPasswordContainer=styled.div`\nborder:solid 3px grey;\npadding:30px;\nwidth:350px;\ntext-align:center;\n\nmargin-bottom:30px;\n@media screen and (max-width:567px){\n    width:80%;\n}\n`\nexport const StyledLink=styled(Link)`\ntext-decoration:none;\n`\nexport const ForgetPassword=styled.p`\ncolor:#3964F5;\nfont-size:18px;\ncursor:pointer;\n`\nexport const SignUpContainer=styled.div`\n    border:solid 3px grey;\n    padding:30px;\n    width:350px;\n    text-align:center;\n    @media screen and (max-width:567px){\n        width:80%;\n    }\n`\nexport const SignUpQuestion=styled.p`\n    font-size:18px;\n    color:#ffff;\n`\nexport const SignUp=styled.span`\nfont-size:18px;\ncolor:#3964F5;\nfont-weight:bold;\ncursor:pointer;\n\n`\nexport const ErrorMsg=styled.p`\n    color:red;\n    font-size:12px;\n`","import { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport GoogleLogin from 'react-google-login'\n\nimport {\n    MainContainer, Heading, Form, InputContainer, Label, Input,\n    LoginButton, SignUpContainer, ForgotPasswordContainer, StyledLink, ForgetPassword,\n    SignUpQuestion, SignUp, ErrorMsg\n} from './styledComponents'\n\nclass LoginForm extends Component {\n    state = { userName: '', password: \"\", isLoginError: false, usernameRequired: false, passwordRequired: false }\n\n    onChangeUserName = event => {\n        this.setState({ userName: event.target.value })\n    }\n\n    onChangePassword = event => {\n        this.setState({ password: event.target.value })\n    }\n    onBlurUserName = event => {\n        const { userName } = this.state\n        if (userName === '') {\n            this.setState({ usernameRequired: true })\n        } else {\n            this.setState({ usernameRequired: false })\n        }\n\n    }\n\n    onBlurPassword = event => {\n        const { password } = this.state\n        if (password === '') {\n            this.setState({ passwordRequired: true })\n        } else {\n            this.setState({ passwordRequired: false })\n        }\n\n    }\n    submitForm = event => {\n        event.preventDefault()\n        const { history } = this.props\n        const { userName, password } = this.state\n        let userDetails = { userName, password }\n        let userData = JSON.parse(localStorage.getItem('user'))\n        if (userData!==null){\n            const result = userData.some(data => (\n                data.userName === userName && data.password === password\n            ))\n    \n            if (result) {\n                history.replace('/')\n                localStorage.setItem('currentUser', JSON.stringify(userDetails))\n            } else {\n                let isUserSignIned=userData.some(data=>(\n                    data.userName===userName\n                ))\n                if (isUserSignIned){\n                    console.log(\"1\")\n                    this.setState({ isLoginError: true,loginError:\"*Wrong Password\" })\n                }else{\n                    this.setState({ isLoginError: true,loginError:\"*Wrong Username\" })\n                }\n\n                \n            }\n\n        }else {\n            this.setState({ isLoginError: true , loginError:\"*User Doesn't Exists\"})\n        }\n\n       \n\n    }\n\n\n    userNameInputContianer = () => {\n        const { userName, usernameRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"username\">USERNAME:</Label>\n                <Input type=\"text\" onChange={this.onChangeUserName} id=\"username\" placeholder=\"Username\" value={userName} onBlur={this.onBlurUserName} />\n                {usernameRequired && <ErrorMsg>*Required</ErrorMsg>}\n            </InputContainer>\n        )\n    }\n\n    passwordInputContianer = () => {\n        const { password, passwordRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"password\">PASSWORD:</Label>\n                <Input type=\"password\" onChange={this.onChangePassword} id=\"password\" placeholder=\"Password\" value={password} onBlur={this.onBlurPassword} />\n                {passwordRequired && <ErrorMsg>*Required</ErrorMsg>}\n            </InputContainer>\n        )\n    }\n\n    responseGoogle = response => {\n        const { history } = this.props\n        \n        let userDetails = {\n            userName: response.profileObj.givenName,\n            password: response.profileObj.googleId\n        }\n        localStorage.setItem('currentUser', JSON.stringify(userDetails))\n        history.replace('/')\n\n    }\n\n    render() {\n        const { loginError,isLoginError } = this.state\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'))\n        if (currentUser !== null) {\n            return <Redirect to='/' />\n        }\n        return (\n            <MainContainer>\n\n                <Form onSubmit={this.submitForm}>\n                    <Heading>Currency Converter</Heading>\n                    {this.userNameInputContianer()}\n                    {this.passwordInputContianer()}\n                    {isLoginError && <ErrorMsg>{loginError}</ErrorMsg>}\n                    <LoginButton type=\"submit\">Sign In</LoginButton>\n                </Form>\n                <ForgotPasswordContainer>\n\n                <GoogleLogin\n                        clientId='812547707128-iog6b28o9087u3majoe46ubke51rdui7.apps.googleusercontent.com'\n                        onSuccess={this.responseGoogle}\n                        onFailure={this.responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                    />\n\n                    <StyledLink to=\"/forget-password\"> <ForgetPassword>Forget password?</ForgetPassword></StyledLink>\n\n                </ForgotPasswordContainer>\n                <SignUpContainer>\n                    <SignUpQuestion>Don't have an account? <StyledLink to=\"/sign-up\"><SignUp >Sign Up</SignUp></StyledLink></SignUpQuestion>\n                </SignUpContainer>\n\n            </MainContainer>\n        )\n    }\n}\nexport default LoginForm","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const MainContainer=styled.div`\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    height:100vh;\n    background:#0F0F0F;\n   \n    \n`\nexport const Form=styled.form`\n    border:solid 3px grey;\n    display:flex;\n    flex-direction:column;\n    justify-content:space-around;\n    align-items:center;\n    padding:30px;\n    min-height:350px;\n    width:350px;\n    margin-bottom:30px;\n    @media screen and (max-width:567px){\n        width:80%;\n    }\n\n`\nexport const Heading=styled.h1`\n    font-size:32px;\n    color:#3964F5;\n    @media screen and (max-width:567px){\n        font-size:28px;\n    }\n\n`\nexport const InputContainer=styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n    margin-bottom:15px;\n`\nexport const Label=styled.label`\n    color:#fff;\n    margin-bottom:15px;\n    font-size:14px;\n    \n`\nexport const Input=styled.input`\n    outline:none;\n    border:none;\n    border-radius:4px;\n    height:40px;\n    padding-left:15px;\n    font-size:14px;\n`\nexport const ErrorMsg=styled.p`\n    color:red;\n    font-size:12px;\n`\nexport const SignUpButton=styled.button`\nborder-radius:8px;\noutline:none;\n    border:none;\n    width:100%;\n    padding:16px;\n    background:#3964F5;\n    color:#fff;\n    font-size:18px;\n    font-weight:600;\n    cursor:pointer;\n`\nexport const LogInContainer=styled.div`\n    border:solid 3px grey;\n    padding:30px;\n    width:350px;\n    text-align:center;\n    @media screen and (max-width:567px){\n        width:80%;\n    }\n`\nexport const LogInQuestion=styled.p`\n    font-size:18px;\n    color:#ffff;\n`\nexport const StyledLink=styled(Link)`\ntext-decoration:none;\n`\nexport const LogIn=styled.span`\nfont-size:18px;\ncolor:#3964F5;\nfont-weight:bold;\ncursor:pointer;\n\n`","import { Component } from 'react'\nimport { Redirect } from 'react-router'\n\nimport {\n    MainContainer, Form, Heading, InputContainer, Label, Input, ErrorMsg,\n    SignUpButton, LogInContainer,\n    LogInQuestion, StyledLink, LogIn\n} from './styledComponents'\n\nclass RegisterForm extends Component {\n    state = {\n        userName: '', password: '', emailId: '', fullName: '', isUserNameAlreadyUsed: false, isMailIdAlreadyUsed: false,\n        passwordError: false, confirmPassword: '', emailRequired: false, fullNameRequired: false, passwordRequired: false,\n        UsernameRequired: false, confirmPasswordRequired: false\n    }\n\n    onChangeUserName = event => {\n        this.setState({ userName: event.target.value })\n    }\n\n    onChangePassword = event => {\n        this.setState({ password: event.target.value })\n    }\n    onChangeMailId = event => {\n        this.setState({ emailId: event.target.value })\n    }\n\n    onChangeFullName = event => {\n        this.setState({ fullName: event.target.value })\n    }\n    onChangeConfirmPassword = event => {\n        this.setState({ confirmPassword: event.target.value })\n    }\n    onBlurEmail = event => {\n        const { emailId } = this.state\n        if (emailId === '') {\n            this.setState({ emailRequired: true })\n        } else {\n            this.setState({ emailRequired: false })\n        }\n\n    }\n\n    onBlurFullname = event => {\n        const { fullName } = this.state\n        if (fullName === '') {\n            this.setState({ fullNameRequired: true })\n        } else {\n            this.setState({ fullNameRequired: false })\n        }\n\n    }\n\n    onBlurUserName = event => {\n        const { userName } = this.state\n        if (userName === '') {\n            this.setState({ usernameRequired: true })\n        } else {\n            this.setState({ usernameRequired: false })\n        }\n\n    }\n\n    onBlurPassword = event => {\n        const { password } = this.state\n        if (password === '') {\n            this.setState({ passwordRequired: true })\n        } else {\n            this.setState({ passwordRequired: false })\n        }\n\n    }\n    onBlurConfirmPassword = event => {\n        const { confirmPassword } = this.state\n        if (confirmPassword === '') {\n            this.setState({ confirmPasswordRequired: true })\n        } else {\n            this.setState({ confirmPasswordRequired: false })\n        }\n\n    }\n\n    submitForm = event => {\n        event.preventDefault()\n        const { fullName, emailId, userName, password, confirmPassword } = this.state\n        const userDetails = { fullName, emailId, userName, password }\n        let userData = JSON.parse(localStorage.getItem('user'))\n        let isUserNameAlreadyUsed = false\n        let isMailIdAlreadyUsed = false\n        let isEmpty=fullName !== '' && emailId !== '' && userName !== '' && password !== '' && confirmPassword !== \"\"\n        const { history } = this.props\n        console.log(\"1\")\n        console.log(isEmpty)\n        if (userData === null && isEmpty) {\n            userData = [userDetails]\n            history.replace('/')\n            localStorage.setItem('currentUser', JSON.stringify(userDetails))\n\n            localStorage.setItem('user', JSON.stringify(userData))\n        }\n        else if(isEmpty) {\n            isUserNameAlreadyUsed = userData.some(data => (data.userName === userName))\n\n            isMailIdAlreadyUsed = userData.some(data => (data.emailId === emailId))\n            \n            \n            \n            if (isUserNameAlreadyUsed) {\n                this.setState({ isUserNameAlreadyUsed: true })\n            } else if (isMailIdAlreadyUsed) {\n                this.setState({ isMailIdAlreadyUsed: true })\n            } else if (confirmPassword !== password) {\n                this.setState({ passwordError: true })\n            }\n            else if (isEmpty) {\n                history.replace('/')\n                userData = [...userData, userDetails]\n                localStorage.setItem('currentUser', JSON.stringify(userDetails))\n\n                localStorage.setItem('user', JSON.stringify(userData))\n            }\n\n\n        }\n\n\n\n    }\n\n    mailIdInputContainer = () => {\n        const { isMailIdAlreadyUsed, emailId, emailRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"email\">EMAIL ID:</Label>\n                <Input type=\"email\" onChange={this.onChangeMailId} id=\"email\" placeholder=\"example@domain.com\" value={emailId} onBlur={this.onBlurEmail} />\n                {isMailIdAlreadyUsed && <ErrorMsg>*E-mail Id Already Used. Use Another E-mail Id</ErrorMsg>}\n                {emailRequired && <ErrorMsg>*Required</ErrorMsg>}\n            </InputContainer>\n        )\n    }\n\n    fullNameInputContainer = () => {\n        const { fullName, fullNameRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"fullname\">FULLNAME:</Label>\n                <Input type=\"text\" onChange={this.onChangeFullName} id='fullname' placeholder=\"Fullname\" value={fullName} onBlur={this.onBlurFullname} />\n                {fullNameRequired && <ErrorMsg>*Required</ErrorMsg>}\n            </InputContainer>\n        )\n    }\n\n    userNameInputContianer = () => {\n        const { isUserNameAlreadyUsed, userName, usernameRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"username\">USERNAME:</Label>\n                <Input type=\"text\" onChange={this.onChangeUserName} id='username' placeholder=\"Username\" value={userName} onBlur={this.onBlurUserName} />\n                {usernameRequired && <ErrorMsg>*Required</ErrorMsg>}\n                {isUserNameAlreadyUsed && <ErrorMsg>*Username Already Used. Use Another Username</ErrorMsg>}\n\n            </InputContainer>\n        )\n    }\n\n    passwordInputContianer = () => {\n        const { password, passwordRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"password\">PASSWORD:</Label>\n                <Input type=\"password\" onChange={this.onChangePassword} id=\"password\" placeholder=\"Password\" value={password} onBlur={this.onBlurPassword} />\n                {passwordRequired && <ErrorMsg>*Required</ErrorMsg>}\n            </InputContainer>\n        )\n    }\n\n    confirmPasswordInputContianer = () => {\n        const { passwordError, confirmPassword, confirmPasswordRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"confirmPassword\">CONFIRM PASSWORD:</Label>\n                <Input type=\"password\" onChange={this.onChangeConfirmPassword} id=\"confirmPassword\"\n                    placeholder=\"Confirm Password\" value={confirmPassword} onBlur={this.onBlurConfirmPassword} />\n                {confirmPasswordRequired && <ErrorMsg>*Required</ErrorMsg>}\n                {passwordError && <ErrorMsg>*Password Doesn't Match </ErrorMsg>}\n            </InputContainer>\n        )\n    }\n\n    render() {\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'))\n        if (currentUser !== null) {\n            return <Redirect to='/' />\n        }\n\n        return (\n            <MainContainer>\n                <Form onSubmit={this.submitForm}>\n                    <Heading>Currency Converter</Heading>\n                    {this.fullNameInputContainer()}\n                    {this.mailIdInputContainer()}\n                    {this.userNameInputContianer()}\n                    {this.passwordInputContianer()}\n                    {this.confirmPasswordInputContianer()}\n                    <SignUpButton type=\"submit\">Sign up</SignUpButton>\n                </Form>\n                <LogInContainer>\n                    <LogInQuestion>Have an account? <StyledLink to=\"/login\"><LogIn type=\"button\" >Log In</LogIn></StyledLink></LogInQuestion>\n                </LogInContainer>\n\n            </MainContainer>\n        )\n    }\n}\nexport default RegisterForm","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const MainContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    height:100vh;\n    background:#0F0F0F;\n   \n    \n`\nexport const Form = styled.form`\n    border:solid 3px grey;\n    display:flex;\n    flex-direction:column;\n    justify-content:space-around;\n    align-items:center;\n    padding:30px;\n    min-height:350px;\n    width:350px;\n    margin-bottom:30px;\n    @media screen and (max-width:567px){\n        width:80%;\n    }\n\n`\nexport const Heading = styled.h1`\n    font-size:32px;\n    color:#3964F5;\n    @media screen and (max-width:567px){\n        font-size:28px;\n    }\n\n`\nexport const InputContainer = styled.div`\n    display:flex;\n    flex-direction:column;\n    width:100%;\n    margin-bottom:15px;\n`\nexport const Label = styled.label`\n    color:#fff;\n    margin-bottom:15px;\n    font-size:14px;\n    \n`\nexport const Input = styled.input`\n    outline:none;\n    border:none;\n    border-radius:4px;\n    height:40px;\n    padding-left:15px;\n    font-size:14px;\n`\nexport const ErrorMsg = styled.p`\n    color:red;\n    font-size:12px;\n`\nexport const ResetPassword = styled.button`\nborder-radius:8px;\noutline:none;\n    border:none;\n    width:100%;\n    padding:16px;\n    background:#3964F5;\n    color:#fff;\n    font-size:18px;\n    font-weight:600;\n    cursor:pointer;\n`\nexport const ForgetPassword = styled.p`\ncolor:#fff;\nfont-size:18px;\ncursor:pointer;\n`\n\nexport const LogInContainer = styled.div`\n    border:solid 3px grey;\n    padding:30px;\n    width:350px;\n    text-align:center;\n    @media screen and (max-width:567px){\n        width:80%;\n    }\n`\nexport const StyledLink = styled(Link)`\ntext-decoration:none;\n`\nexport const LogIn = styled.span`\nfont-size:18px;\ncolor:#3964F5;\nfont-weight:bold;\ncursor:pointer;\n\n`","import { Component } from 'react'\nimport { Redirect } from 'react-router'\nimport {\n    MainContainer, Form, Heading, InputContainer, Label, Input, ErrorMsg,\n    ResetPassword, LogInContainer, LogIn, StyledLink\n} from './styledComponents'\n\n\nclass ForgetPassword extends Component {\n    state = {\n        userName: '', password: \"\", confirmPassword: '', userNameError: false, passwordError: false,\n        confirmPasswordRequired: false, passwordRequired: false, usernameRequired: false\n    }\n\n    onChangeUserName = event => {\n        this.setState({ userName: event.target.value })\n    }\n\n    onChangePassword = event => {\n        this.setState({ password: event.target.value })\n    }\n\n    onChangeConfirmPassword = event => {\n        this.setState({ confirmPassword: event.target.value })\n    }\n\n\n    onBlurUserName = event => {\n        const { userName } = this.state\n        if (userName === '') {\n            this.setState({ usernameRequired: true })\n        } else {\n            this.setState({ usernameRequired: false })\n        }\n\n    }\n\n    onBlurPassword = event => {\n        const { password } = this.state\n        if (password === '') {\n            this.setState({ passwordRequired: true })\n        } else {\n            this.setState({ passwordRequired: false })\n        }\n\n    }\n    onBlurConfirmPassword = event => {\n        const { confirmPassword } = this.state\n        if (confirmPassword === '') {\n            this.setState({ confirmPasswordRequired: true })\n        } else {\n            this.setState({ confirmPasswordRequired: false })\n        }\n\n    }\n\n    submitForm = event => {\n        event.preventDefault()\n        const { history } = this.props\n        const { userName, password, confirmPassword } = this.state\n        let userData = JSON.parse(localStorage.getItem('user'))\n        if (userData === null) {\n            this.setState({ userNameError: true })\n        } else {\n            let isUsernamePresent = userData.some(data => (data.userName === userName))\n            if (!isUsernamePresent) {\n                this.setState({ userNameError: true })\n            }\n            else if (confirmPassword !== password) {\n                this.setState({ passwordError: true })\n            }\n            else if (confirmPassword === password && isUsernamePresent && userName !== \"\" && confirmPassword !== '' & password !== '') {\n\n\n                let currentUserDetails = userData.filter(data => (data.userName === userName))\n\n                currentUserDetails = {\n                    userName: currentUserDetails[0].userName, fullName: currentUserDetails[0].fullName,\n                    emailId: currentUserDetails[0].emailId, password\n                }\n\n                let otherUsersDetails = userData.filter(data => (data.userName !== userName))\n                userData = [...otherUsersDetails, currentUserDetails]\n                localStorage.setItem('user', JSON.stringify(userData))\n                history.replace('/login')\n            }\n\n        }\n\n\n\n\n    }\n\n\n    userNameInputContianer = () => {\n        const { userNameError, userName, usernameRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"username\">USERNAME:</Label>\n                <Input type=\"text\" onChange={this.onChangeUserName} id=\"username\" placeholder=\"Username\" value={userName} onBlur={this.onBlurUserName} />\n                {userNameError && <ErrorMsg>*Username Not Found</ErrorMsg>}\n                {usernameRequired && <ErrorMsg>*Required</ErrorMsg>}\n            </InputContainer>\n        )\n    }\n\n    passwordInputContianer = () => {\n        const { password, passwordRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"password\">PASSWORD:</Label>\n                <Input type=\"password\" onChange={this.onChangePassword} id=\"password\" placeholder=\"Password\" value={password} onBlur={this.onBlurPassword} />\n                {passwordRequired && <ErrorMsg>*Required</ErrorMsg>}\n            </InputContainer>\n        )\n    }\n\n    confirmPasswordInputContianer = () => {\n        const { passwordError, confirmPassword, confirmPasswordRequired } = this.state\n        return (\n            <InputContainer>\n                <Label htmlFor=\"confirmPassword\">CONFIRM PASSWORD:</Label>\n                <Input type=\"password\" onChange={this.onChangeConfirmPassword} id=\"confirmPassword\"\n                    placeholder=\"Confirm Password\" value={confirmPassword} onBlur={this.onBlurConfirmPassword} />\n                {confirmPasswordRequired && <ErrorMsg>*Required</ErrorMsg>}\n                {passwordError && <ErrorMsg>*Password Doesn't Match </ErrorMsg>}\n            </InputContainer>\n        )\n    }\n\n    render() {\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'))\n        if (currentUser !== null) {\n            return <Redirect to='/' />\n        }\n        return (\n            <MainContainer>\n                <Form onSubmit={this.submitForm}>\n                    <Heading>Currency Converter</Heading>\n                    {this.userNameInputContianer()}\n                    {this.passwordInputContianer()}\n                    {this.confirmPasswordInputContianer()}\n                    <ResetPassword type=\"submit\">Reset Password</ResetPassword>\n                </Form>\n                <LogInContainer>\n                    <StyledLink to='/login'><LogIn>Log In</LogIn></StyledLink>\n                </LogInContainer>\n            </MainContainer>)\n    }\n\n}\nexport default ForgetPassword","import {BrowserRouter,Switch,Route} from 'react-router-dom' \nimport CurrenctConverter from './components/CurrencyCoverter'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport LoginForm from './components/LoginForm';\nimport RegisterForm from './components/RegisterForm';\nimport './App.css';\nimport ForgetPassword from './components/ForgetPassword';\n\nconst App=()=>(<BrowserRouter>\n<Switch>\n    <Route exact path=\"/login\" component={LoginForm}/>\n    <Route exact path=\"/sign-up\" component={RegisterForm}/>\n    <Route exact path=\"/forget-password\" component={ForgetPassword}/>\n    <ProtectedRoute exact path=\"/\" component={CurrenctConverter}/>\n    \n</Switch>\n</BrowserRouter>)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}